// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: detect.proto

#ifndef PROTOBUF_INCLUDED_detect_2eproto
#define PROTOBUF_INCLUDED_detect_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_detect_2eproto 

namespace protobuf_detect_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_detect_2eproto
namespace Detect {
class BoxRect;
class BoxRectDefaultTypeInternal;
extern BoxRectDefaultTypeInternal _BoxRect_default_instance_;
class CameraRect;
class CameraRectDefaultTypeInternal;
extern CameraRectDefaultTypeInternal _CameraRect_default_instance_;
class DetectRequest;
class DetectRequestDefaultTypeInternal;
extern DetectRequestDefaultTypeInternal _DetectRequest_default_instance_;
class DetectResponse;
class DetectResponseDefaultTypeInternal;
extern DetectResponseDefaultTypeInternal _DetectResponse_default_instance_;
}  // namespace Detect
namespace google {
namespace protobuf {
template<> ::Detect::BoxRect* Arena::CreateMaybeMessage<::Detect::BoxRect>(Arena*);
template<> ::Detect::CameraRect* Arena::CreateMaybeMessage<::Detect::CameraRect>(Arena*);
template<> ::Detect::DetectRequest* Arena::CreateMaybeMessage<::Detect::DetectRequest>(Arena*);
template<> ::Detect::DetectResponse* Arena::CreateMaybeMessage<::Detect::DetectResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Detect {

// ===================================================================

class BoxRect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Detect.BoxRect) */ {
 public:
  BoxRect();
  virtual ~BoxRect();

  BoxRect(const BoxRect& from);

  inline BoxRect& operator=(const BoxRect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BoxRect(BoxRect&& from) noexcept
    : BoxRect() {
    *this = ::std::move(from);
  }

  inline BoxRect& operator=(BoxRect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BoxRect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BoxRect* internal_default_instance() {
    return reinterpret_cast<const BoxRect*>(
               &_BoxRect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(BoxRect* other);
  friend void swap(BoxRect& a, BoxRect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BoxRect* New() const final {
    return CreateMaybeMessage<BoxRect>(NULL);
  }

  BoxRect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BoxRect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BoxRect& from);
  void MergeFrom(const BoxRect& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BoxRect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double width = 3;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  double width() const;
  void set_width(double value);

  // double height = 4;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  double height() const;
  void set_height(double value);

  // int64 class_id = 5;
  void clear_class_id();
  static const int kClassIdFieldNumber = 5;
  ::google::protobuf::int64 class_id() const;
  void set_class_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Detect.BoxRect)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double width_;
  double height_;
  ::google::protobuf::int64 class_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_detect_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CameraRect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Detect.CameraRect) */ {
 public:
  CameraRect();
  virtual ~CameraRect();

  CameraRect(const CameraRect& from);

  inline CameraRect& operator=(const CameraRect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CameraRect(CameraRect&& from) noexcept
    : CameraRect() {
    *this = ::std::move(from);
  }

  inline CameraRect& operator=(CameraRect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CameraRect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CameraRect* internal_default_instance() {
    return reinterpret_cast<const CameraRect*>(
               &_CameraRect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CameraRect* other);
  friend void swap(CameraRect& a, CameraRect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CameraRect* New() const final {
    return CreateMaybeMessage<CameraRect>(NULL);
  }

  CameraRect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CameraRect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CameraRect& from);
  void MergeFrom(const CameraRect& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CameraRect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Detect.BoxRect box_rect = 2;
  int box_rect_size() const;
  void clear_box_rect();
  static const int kBoxRectFieldNumber = 2;
  ::Detect::BoxRect* mutable_box_rect(int index);
  ::google::protobuf::RepeatedPtrField< ::Detect::BoxRect >*
      mutable_box_rect();
  const ::Detect::BoxRect& box_rect(int index) const;
  ::Detect::BoxRect* add_box_rect();
  const ::google::protobuf::RepeatedPtrField< ::Detect::BoxRect >&
      box_rect() const;

  // int64 camera_id = 1;
  void clear_camera_id();
  static const int kCameraIdFieldNumber = 1;
  ::google::protobuf::int64 camera_id() const;
  void set_camera_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Detect.CameraRect)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Detect::BoxRect > box_rect_;
  ::google::protobuf::int64 camera_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_detect_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DetectRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Detect.DetectRequest) */ {
 public:
  DetectRequest();
  virtual ~DetectRequest();

  DetectRequest(const DetectRequest& from);

  inline DetectRequest& operator=(const DetectRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectRequest(DetectRequest&& from) noexcept
    : DetectRequest() {
    *this = ::std::move(from);
  }

  inline DetectRequest& operator=(DetectRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectRequest* internal_default_instance() {
    return reinterpret_cast<const DetectRequest*>(
               &_DetectRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(DetectRequest* other);
  friend void swap(DetectRequest& a, DetectRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectRequest* New() const final {
    return CreateMaybeMessage<DetectRequest>(NULL);
  }

  DetectRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DetectRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DetectRequest& from);
  void MergeFrom(const DetectRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DetectRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  bool status() const;
  void set_status(bool value);

  // @@protoc_insertion_point(class_scope:Detect.DetectRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_detect_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DetectResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Detect.DetectResponse) */ {
 public:
  DetectResponse();
  virtual ~DetectResponse();

  DetectResponse(const DetectResponse& from);

  inline DetectResponse& operator=(const DetectResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetectResponse(DetectResponse&& from) noexcept
    : DetectResponse() {
    *this = ::std::move(from);
  }

  inline DetectResponse& operator=(DetectResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetectResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetectResponse* internal_default_instance() {
    return reinterpret_cast<const DetectResponse*>(
               &_DetectResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(DetectResponse* other);
  friend void swap(DetectResponse& a, DetectResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetectResponse* New() const final {
    return CreateMaybeMessage<DetectResponse>(NULL);
  }

  DetectResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DetectResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DetectResponse& from);
  void MergeFrom(const DetectResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DetectResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Detect.CameraRect camera_rect = 2;
  int camera_rect_size() const;
  void clear_camera_rect();
  static const int kCameraRectFieldNumber = 2;
  ::Detect::CameraRect* mutable_camera_rect(int index);
  ::google::protobuf::RepeatedPtrField< ::Detect::CameraRect >*
      mutable_camera_rect();
  const ::Detect::CameraRect& camera_rect(int index) const;
  ::Detect::CameraRect* add_camera_rect();
  const ::google::protobuf::RepeatedPtrField< ::Detect::CameraRect >&
      camera_rect() const;

  // .google.protobuf.Timestamp resp_timestamp = 3;
  bool has_resp_timestamp() const;
  void clear_resp_timestamp();
  static const int kRespTimestampFieldNumber = 3;
  private:
  const ::google::protobuf::Timestamp& _internal_resp_timestamp() const;
  public:
  const ::google::protobuf::Timestamp& resp_timestamp() const;
  ::google::protobuf::Timestamp* release_resp_timestamp();
  ::google::protobuf::Timestamp* mutable_resp_timestamp();
  void set_allocated_resp_timestamp(::google::protobuf::Timestamp* resp_timestamp);

  // bool status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  bool status() const;
  void set_status(bool value);

  // @@protoc_insertion_point(class_scope:Detect.DetectResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Detect::CameraRect > camera_rect_;
  ::google::protobuf::Timestamp* resp_timestamp_;
  bool status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_detect_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BoxRect

// double x = 1;
inline void BoxRect::clear_x() {
  x_ = 0;
}
inline double BoxRect::x() const {
  // @@protoc_insertion_point(field_get:Detect.BoxRect.x)
  return x_;
}
inline void BoxRect::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:Detect.BoxRect.x)
}

// double y = 2;
inline void BoxRect::clear_y() {
  y_ = 0;
}
inline double BoxRect::y() const {
  // @@protoc_insertion_point(field_get:Detect.BoxRect.y)
  return y_;
}
inline void BoxRect::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:Detect.BoxRect.y)
}

// double width = 3;
inline void BoxRect::clear_width() {
  width_ = 0;
}
inline double BoxRect::width() const {
  // @@protoc_insertion_point(field_get:Detect.BoxRect.width)
  return width_;
}
inline void BoxRect::set_width(double value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:Detect.BoxRect.width)
}

// double height = 4;
inline void BoxRect::clear_height() {
  height_ = 0;
}
inline double BoxRect::height() const {
  // @@protoc_insertion_point(field_get:Detect.BoxRect.height)
  return height_;
}
inline void BoxRect::set_height(double value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:Detect.BoxRect.height)
}

// int64 class_id = 5;
inline void BoxRect::clear_class_id() {
  class_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BoxRect::class_id() const {
  // @@protoc_insertion_point(field_get:Detect.BoxRect.class_id)
  return class_id_;
}
inline void BoxRect::set_class_id(::google::protobuf::int64 value) {
  
  class_id_ = value;
  // @@protoc_insertion_point(field_set:Detect.BoxRect.class_id)
}

// -------------------------------------------------------------------

// CameraRect

// int64 camera_id = 1;
inline void CameraRect::clear_camera_id() {
  camera_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CameraRect::camera_id() const {
  // @@protoc_insertion_point(field_get:Detect.CameraRect.camera_id)
  return camera_id_;
}
inline void CameraRect::set_camera_id(::google::protobuf::int64 value) {
  
  camera_id_ = value;
  // @@protoc_insertion_point(field_set:Detect.CameraRect.camera_id)
}

// repeated .Detect.BoxRect box_rect = 2;
inline int CameraRect::box_rect_size() const {
  return box_rect_.size();
}
inline void CameraRect::clear_box_rect() {
  box_rect_.Clear();
}
inline ::Detect::BoxRect* CameraRect::mutable_box_rect(int index) {
  // @@protoc_insertion_point(field_mutable:Detect.CameraRect.box_rect)
  return box_rect_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Detect::BoxRect >*
CameraRect::mutable_box_rect() {
  // @@protoc_insertion_point(field_mutable_list:Detect.CameraRect.box_rect)
  return &box_rect_;
}
inline const ::Detect::BoxRect& CameraRect::box_rect(int index) const {
  // @@protoc_insertion_point(field_get:Detect.CameraRect.box_rect)
  return box_rect_.Get(index);
}
inline ::Detect::BoxRect* CameraRect::add_box_rect() {
  // @@protoc_insertion_point(field_add:Detect.CameraRect.box_rect)
  return box_rect_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Detect::BoxRect >&
CameraRect::box_rect() const {
  // @@protoc_insertion_point(field_list:Detect.CameraRect.box_rect)
  return box_rect_;
}

// -------------------------------------------------------------------

// DetectRequest

// bool status = 1;
inline void DetectRequest::clear_status() {
  status_ = false;
}
inline bool DetectRequest::status() const {
  // @@protoc_insertion_point(field_get:Detect.DetectRequest.status)
  return status_;
}
inline void DetectRequest::set_status(bool value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:Detect.DetectRequest.status)
}

// -------------------------------------------------------------------

// DetectResponse

// bool status = 1;
inline void DetectResponse::clear_status() {
  status_ = false;
}
inline bool DetectResponse::status() const {
  // @@protoc_insertion_point(field_get:Detect.DetectResponse.status)
  return status_;
}
inline void DetectResponse::set_status(bool value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:Detect.DetectResponse.status)
}

// repeated .Detect.CameraRect camera_rect = 2;
inline int DetectResponse::camera_rect_size() const {
  return camera_rect_.size();
}
inline void DetectResponse::clear_camera_rect() {
  camera_rect_.Clear();
}
inline ::Detect::CameraRect* DetectResponse::mutable_camera_rect(int index) {
  // @@protoc_insertion_point(field_mutable:Detect.DetectResponse.camera_rect)
  return camera_rect_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Detect::CameraRect >*
DetectResponse::mutable_camera_rect() {
  // @@protoc_insertion_point(field_mutable_list:Detect.DetectResponse.camera_rect)
  return &camera_rect_;
}
inline const ::Detect::CameraRect& DetectResponse::camera_rect(int index) const {
  // @@protoc_insertion_point(field_get:Detect.DetectResponse.camera_rect)
  return camera_rect_.Get(index);
}
inline ::Detect::CameraRect* DetectResponse::add_camera_rect() {
  // @@protoc_insertion_point(field_add:Detect.DetectResponse.camera_rect)
  return camera_rect_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Detect::CameraRect >&
DetectResponse::camera_rect() const {
  // @@protoc_insertion_point(field_list:Detect.DetectResponse.camera_rect)
  return camera_rect_;
}

// .google.protobuf.Timestamp resp_timestamp = 3;
inline bool DetectResponse::has_resp_timestamp() const {
  return this != internal_default_instance() && resp_timestamp_ != NULL;
}
inline const ::google::protobuf::Timestamp& DetectResponse::_internal_resp_timestamp() const {
  return *resp_timestamp_;
}
inline const ::google::protobuf::Timestamp& DetectResponse::resp_timestamp() const {
  const ::google::protobuf::Timestamp* p = resp_timestamp_;
  // @@protoc_insertion_point(field_get:Detect.DetectResponse.resp_timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* DetectResponse::release_resp_timestamp() {
  // @@protoc_insertion_point(field_release:Detect.DetectResponse.resp_timestamp)
  
  ::google::protobuf::Timestamp* temp = resp_timestamp_;
  resp_timestamp_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* DetectResponse::mutable_resp_timestamp() {
  
  if (resp_timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    resp_timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Detect.DetectResponse.resp_timestamp)
  return resp_timestamp_;
}
inline void DetectResponse::set_allocated_resp_timestamp(::google::protobuf::Timestamp* resp_timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(resp_timestamp_);
  }
  if (resp_timestamp) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(resp_timestamp)->GetArena();
    if (message_arena != submessage_arena) {
      resp_timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resp_timestamp, submessage_arena);
    }
    
  } else {
    
  }
  resp_timestamp_ = resp_timestamp;
  // @@protoc_insertion_point(field_set_allocated:Detect.DetectResponse.resp_timestamp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Detect

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_detect_2eproto
